{"version":3,"sources":["App.tsx","pages/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["hasActive","isActive","classNames","App","className","role","to","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeopleTable","person","name","sex","born","died","fatherName","motherName","slug","mother","father","personSlug","useParams","PeoplePage","useState","isLoading","setIsLoading","isError","setIsError","people","setPeople","useEffect","peopleFromServer","map","find","fath","moth","getPreparedPeople","catch","finally","length","NotFoundPage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.20b4bf95.chunk.js","sourcesContent":["import { NavLink, Outlet } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport './App.scss';\n\nconst hasActive = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item',\n  { 'has-background-grey-lighter': isActive },\n);\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={hasActive} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink\n            className={hasActive}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useParams, Link } from 'react-router-dom';\n\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PeopleTable: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n    mother,\n    father,\n  } = person;\n\n  const { personSlug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': slug === personSlug,\n      })}\n    >\n      <td>\n        <Link\n          className={classNames({\n            'has-text-danger': sex === 'f',\n          })}\n          to={`../${slug}`}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <Link\n            className=\"has-text-danger\"\n            to={`../${mother.slug}`}\n          >\n            {motherName}\n          </Link>\n        ) : (\n          motherName || '-'\n        )}\n      </td>\n      <td>\n        {father ? (\n          <Link to={`../${father.slug}`}>\n            {fatherName}\n          </Link>\n        ) : (\n          fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import { useState, useEffect } from 'react';\n\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\n\nconst getPreparedPeople = (people: Person[]) => {\n  return people.map(person => {\n    const father = people.find(fath => fath.name === person.fatherName);\n    const mother = people.find(moth => moth.name === person.motherName);\n\n    return {\n      ...person,\n      father,\n      mother,\n    };\n  });\n};\n\nexport const PeoplePage = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    getPeople()\n      .then((peopleFromServer) => {\n        setPeople(getPreparedPeople(peopleFromServer));\n      })\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && !people.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!!people.length && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <PeopleTable\n                    key={person.slug}\n                    person={person}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const Root = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route path=\":personSlug?\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n\n        </Route>\n      </Routes>\n    </Router>\n  );\n};\n","import { createRoot } from 'react-dom/client';\n\nimport { Root } from './Root';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}